import math

def print_neatly(n, m, words):
    extra_spaces = [[0 for j in range(len(words))] for i in range(len(words))]
    line_cost = [[0 for j in range(len(words))] for i in range(len(words))]

    # Compute extras (remaining spaces in the lines)
    for i in range(n):
        extra_spaces[i][i] = m - len(words[i])
        for j in range(i+1, n):
            extra_spaces[i][j] = extra_spaces[i][j-1] - len(words[j])-1

    # Compute each line's cost
    for i in range(n):
        for j in range(i, n):
            if extra_spaces[i][j] < 0:
                line_cost[i][j] = float('inf')
            elif ((extra_spaces[i][j] >= 0) and (j == n-1)):
                line_cost[i][j] = 0
            else:
                line_cost[i][j] = int(math.pow(extra_spaces[i][j], 3))

    cost = [0]*(n+1)
    # Compute total cost
    for j in range(1, n+1):
        cost[j] = float('inf')
        for i in range(1, j+1):
            c0 = cost[i-1] + line_cost[i-1][j-1]
            if c0 < cost[j]:
                cost[j] = c0

    print(cost[n])

if __name__ == "__main__":
    n, m = map(int, input().split())
    words = input().split()
    # n, m = 7, 10
    # words = "word like first as the the complete\n".split()
    print_neatly(n, m, words)
